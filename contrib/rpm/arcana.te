policy_module(arcana, 1.100.1)

########################################
#
# Declarations
#

type arcana_t;
type arcana_exec_t;
init_daemon_domain(arcana_t, arcana_exec_t)

permissive arcana_t;

type arcana_initrc_exec_t;
init_script_file(arcana_initrc_exec_t)

type arcana_conf_t;
files_type(arcana_conf_t)

type arcana_var_lib_t;
files_type(arcana_var_lib_t)

type arcana_var_run_t;
files_type(arcana_var_run_t)

type arcana_port_t;
corenet_port(arcana_port_t)

########################################
#
# arcana local policy
#
allow arcana_t self:process { fork };

allow arcana_t self:fifo_file rw_fifo_file_perms;
allow arcana_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(arcana_t, arcana_conf_t, arcana_conf_t)
manage_files_pattern(arcana_t, arcana_conf_t, arcana_conf_t)

manage_dirs_pattern(arcana_t, arcana_var_lib_t, arcana_var_lib_t)
manage_files_pattern(arcana_t, arcana_var_lib_t, arcana_var_lib_t)
files_var_lib_filetrans(arcana_t, arcana_var_lib_t, { dir file })

manage_dirs_pattern(arcana_t, arcana_var_run_t, arcana_var_run_t)
manage_files_pattern(arcana_t, arcana_var_run_t, arcana_var_run_t)

sysnet_dns_name_resolve(arcana_t)
corenet_all_recvfrom_unlabeled(arcana_t)

allow arcana_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(arcana_t)
corenet_tcp_sendrecv_generic_node(arcana_t)
corenet_tcp_sendrecv_all_ports(arcana_t)
corenet_tcp_bind_generic_node(arcana_t)

gen_require(`
    type arcana_port_t;
')
allow arcana_t arcana_port_t:tcp_socket name_bind;

gen_require(`
    type arcana_port_t;
')
allow arcana_t arcana_port_t:tcp_socket name_connect;

domain_use_interactive_fds(arcana_t)

files_read_etc_files(arcana_t)

miscfiles_read_localization(arcana_t)

sysnet_dns_name_resolve(arcana_t)

allow arcana_t arcana_exec_t:file execute_no_trans;
allow arcana_t self:process setsched;
corecmd_exec_ls(arcana_t)
corenet_tcp_connect_http_port(arcana_t)
dev_read_urand(arcana_t)
fs_getattr_xattr_fs(arcana_t)
kernel_read_system_state(arcana_t)
